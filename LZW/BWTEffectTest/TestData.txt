На основе структуры данных "Бор" из д/з 2 (возможно, её придётся модифицировать для поддержки посимвольного добавления) реализовать алгоритм Лемпеля — Зива — Уэлча. Требуется написать консольное приложение, которое в качестве аргумента командной строки принимает путь к файлу, который надо сжать или разжать, и ключ -c, означающий, что файл надо сжать, или -u, означающий, что надо разжать. В качестве результата должен создаваться новый файл:

если выполняется сжатие, файл именуется как "имя изначального файла".zipped;
если выполняется разжатие, расширение .zipped отбрасывается.
Вы вправе в сжатом файле хранить любую дополнительную информацию. Обратите внимание, что сжиматься могут не только тексты, но и бинарные файлы — для тестирования будет сжат/разжат .exe-файл и запущен после разжатия.

Программа после сжатия должна печатать коэффициент сжатия на консоль.

Применение преобразования Барроуза-Уилера из задания 1 и измерение его влияния на коэффициент сжатия (то есть сколько без него/сколько с ним на нескольких достаточно больших тестах) принесёт вам один дополнительный балл.

Использование кодовых последовательностей переменной длины принесёт ещё один балл.

Кроме того, ещё один балл будет разыгран среди решений сданных в срок: его получит решение с самым большим коэффициентом сжатия (подсказка: кодовые последовательности "оптимальной" длины, не кратной 8, могут быть путём к победе, потому что мало кто сможет это правильно сделать). Вспомните пару про двоичное представление данных из первого семестра.

Модульные тесты обязательны.

Итого максимум за задачу — 6 баллов, ещё три можно получить сверх.